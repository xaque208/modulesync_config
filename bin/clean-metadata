#!/usr/bin/env python3
import glob
import json

# Note range is exclusive so the last number is not in the list
PUPPET_VERSION = '>= 5.5.8 < 7.0.0'
UNSUPPORTED_EL = {str(i) for i in range(3, 6)}
UNSUPPORTED = {
    'CentOS': UNSUPPORTED_EL,
    'Debian': {str(i) for i in range(3, 8)},
    'Fedora': {str(i) for i in range(3, 30)},
    'OracleLinux': UNSUPPORTED_EL,
    'RedHat': UNSUPPORTED_EL,
    'SLED': {'9', '10'},
    'SLES': {'9', '10'},
    'Scientific': UNSUPPORTED_EL,
    'Ubuntu': {str(i) + m for i in range(4, 18) for m in ('.04', '.10')} - {'16.04'},
}

for filename in glob.glob('modules/*/*/metadata.json'):
    print('Reading {}'.format(filename))

    with open(filename) as fp:
        metadata = json.load(fp)

    updated = False

    for req in metadata.get('requirements', []):
        if req['name'] == 'puppet' and req['version_requirement'] != PUPPET_VERSION:
            req['version_requirement'] = PUPPET_VERSION
            updated = True

    for operatingsystem in metadata.get('operatingsystem_support', []):
        releases = set(operatingsystem.get('operatingsystemrelease', []))
        for release in releases & UNSUPPORTED.get(operatingsystem['operatingsystem'], set()):
            print('Removing {}-{}'.format(operatingsystem['operatingsystem'], release))
            operatingsystem['operatingsystemrelease'].remove(release)
            updated = True

        if operatingsystem.get('operatingsystemrelease') == []:
            print('Removing {}'.format(operatingsystem['operatingsystem']))
            metadata['operatingsystem_support'].remove(operatingsystem)
            updated = True

    if updated:
        print('Writing {}'.format(filename))
        with open(filename, 'w') as fp:
            fp.write(json.dumps(metadata, indent=2) + "\n")
