#!/usr/bin/env python3

from pathlib import Path
import click
from ruamel.yaml import YAML


@click.command()
@click.argument('modules', nargs=-1)
@click.option('--filename', help='Path to the secrets',
              default='../plumbing/share/travis_secrets.yaml',
              type=click.Path(exists=True, dir_okay=False, writable=True))
def cli(filename, modules):
    yaml = YAML(typ='rt')
    yaml.default_flow_style = False
    yaml.explicit_start = True
    yaml.preserve_quotes = True
    yaml.indent(sequence=4, offset=2)

    with open(filename) as secrets_fp:
        secrets = yaml.load(secrets_fp)

    modulesync = yaml.load(Path('modulesync.yml').read_text())
    namespace = modulesync['namespace']

    if not modules:
        modules = yaml.load(Path('managed_modules.yml').read_text())

    modules_path = Path('modules')

    for module in modules:
        path = modules_path / namespace / module / '.sync.yml'
        try:
            sync = yaml.load(path.read_text())
        except FileNotFoundError:
            sync = {}

        try:
            secret = secrets[module]['secure']
        except KeyError:
            click.echo(f'Failed to find secret for {module}', err=True)
        else:
            try:
                sync['.travis.yml']['secure'] = secret
            except KeyError:
                sync['.travis.yml'] = {'secure': secret}

            with path.open('w') as sync_fp:
                yaml.dump(sync, sync_fp)


if __name__ == '__main__':
    cli()  # pylint: disable=no-value-for-parameter
